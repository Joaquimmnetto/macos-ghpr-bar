import java.nio.file.CopyOption
import java.nio.file.Files
import java.nio.file.Path
import java.nio.file.StandardCopyOption
import java.nio.file.attribute.PosixFilePermission

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our Samples at https://docs.gradle.org/9.0.0/samples
 */
def unix755 = Set.of(
    PosixFilePermission.OWNER_READ,
    PosixFilePermission.OWNER_WRITE,
    PosixFilePermission.OWNER_EXECUTE,
    PosixFilePermission.GROUP_READ,
    PosixFilePermission.GROUP_EXECUTE,
    PosixFilePermission.OTHERS_READ,
    PosixFilePermission.OTHERS_EXECUTE
)

tasks.register("buildGoApp", Exec) {
    def binFile = file("${projectDir.absolutePath}/app")
    binFile.delete()
    environment 'GOOS', 'darwin'
    environment 'GOARCH', 'amd64'
    environment 'CGO_ENABLED', '1'
    commandLine 'go', 'build', '-o', "$binFile.absolutePath", "."
    doLast {
        Files.setPosixFilePermissions(binFile.toPath(), unix755)
    }
}

tasks.register("createApkFolder") {
    dependsOn 'buildGoApp'
    def appRoot = Path.of(projectDir.absolutePath, "GhBar.app")
    def appContentsPath = appRoot.resolve("Contents")
    def appBinFolder = appContentsPath.resolve("MacOS")
    def appBinFile = appBinFolder.resolve("GhBar")
    def appConfigFile = appBinFolder.resolve("config.yml")
    def appPlistFile = appContentsPath.resolve("Info.plist")
    def binFile = file("app")
    def configFile = file("config.yml")
    def plistFile = file("Info.plist")
    doFirst {
        appRoot.toFile().deleteDir()
    }
    doLast {
        Files.createDirectories(appContentsPath)
        Files.createDirectories(appBinFolder)
        Files.copy(binFile.toPath(), appBinFile, StandardCopyOption.REPLACE_EXISTING)
        Files.copy(configFile.toPath(), appConfigFile, StandardCopyOption.REPLACE_EXISTING)
        Files.copy(plistFile.toPath(), appPlistFile, StandardCopyOption.REPLACE_EXISTING)
        Files.setPosixFilePermissions(appRoot, unix755)
    }
}

